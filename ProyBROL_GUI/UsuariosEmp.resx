<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="lblBienven.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHh4AAAEAIADAAwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAeAAAAHggGAAAAOzCuogAAA4dJ
        REFUeJztlkloU1EUhqsGjeBCbF3YjQu1LsQupM3w5jF5GV6mNmmSkhpFUVoR3IgDaiuitSlS6aBWi4qg
        0I2LblQUdwoqIuIE4oALEXHhABon4n87YHym8WmfuPHA5bXvndzvnnv+c8+tqPhv/9qyq9YsC+qRnD+g
        92PUFn+LNcRrBFFuV73aZllVdT0cWto30G+zBNwYT+o0I7ytd9CFunqnXvzN5w/qDqe7UO9wFcjTTTFv
        OF66oIci1LbtO6ZbBKYIYBIw9cNwuui8VwsMNDQm5loEpkyByXA46QJFs3cQvdtyMHKuO10/Q78Pd4Fm
        +AdBPSxbCk43Z+aEwtEVgWB4rSAqI26Ke19qAQzLP4RvpWVgbHONJKtaMp1eQP6PJ9IrWE66XypyRdX6
        ew72mhdcOTDE1j6maOoLL8hnk6nM4p27Ouy8oPSSHBfD3RSbx5Y7rYp4FPx9cu6ZovoW5bp7bKKkXjfC
        8e784NGhGVMGy4qnGlsd4Xj5NCCj+YXvo2SquQo5XUjR/JtisMvNvIYgl0wZPGHZVWtnIrddgH8gfjjN
        Osl7RDhM8lsMR65LzvGTxROpX4KJJZpSswA/N16/Lx89flqBnDYZ6xyp2GwKrIeiOkVzvwQT4wVpJ6lr
        iK2wZev2+ZFow3LydzEYi2s3BfYHwjpEMwqWFa2lnC/LCZsmIlyZXV2NiGuMAmNY0Rw4EAzVQRTPiXoh
        pL5yvhwvHiFgRP2pc3/O3pRMa0awJHt3mQJ37N5jw8lzebz7vMb2zSvlh3ObxvcXxA/+V8g71aN1G8Go
        8dWmwMREWcoQdZJJILQbENwPJYF0LEbp3CWtE35f0KeDFy9dxoLFe8Vg5Purx+ujTYMHDh+aIUrKmYlJ
        nC4GyuWv4zmChdzE8/PY5HTB59f3kt8oqnevMVqI9EmmJft7Z/a69a121OUBMplxwvE2+BmNYj/xjcYS
        tVjMB6OPV/Oby28pQy5llpeOIOKrmPwGtvMqw/G9yH1da9tGu+YLxlxu9oURivZ4G7256o/BRjtx8pQN
        J1elPxByoNxyKL28cUeg8ncoraBlUETAQsm3AHuC6POlbyLUR+R7377OrqndwYqN3EAmu/qMQUkf9g42
        xptmWwYlVu7OxbDCK4ipLRyJWQudDAxhfUJ3GiZiOzZ0fJrlUGK4b+k4pUh0bzGuKR5PrnVDW/VfgVlt
        3wBhoRolcBPpHgAAAABJRU5ErkJggg==
</value>
  </data>
</root>